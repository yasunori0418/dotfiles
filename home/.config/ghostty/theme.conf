# A theme to use.
# This can be a built-in theme name, a custom theme name, or an absolute path to a custom theme file.
# Ghostty also supports specifying a different theme to use for light and dark mode.
# Each option is documented below.
#
# If the theme is an absolute pathname, Ghostty will attempt to load that file as a theme.
# If that file does not exist or is inaccessible, an error will be logged and no other directories will be searched.
#
# If the theme is not an absolute pathname, two different directories will be searched for a file name that matches the theme.
# This is case sensitive on systems with case-sensitive filesystems.
# It is an error for a theme name to include path separators unless it is an absolute pathname.
#
# The first directory is the `themes` subdirectory of your Ghostty configuration directory.
# This is `$XDG_CONFIG_DIR/ghostty/themes` or `~/.config/ghostty/themes`.
#
# The second directory is the `themes` subdirectory of the Ghostty resources directory.
# Ghostty ships with a multitude of themes that will be installed into this directory.
# On macOS, this list is in the `Ghostty.app/Contents/ Resources/ghostty/themes` directory.
# On Linux, this list is in the `share/ ghostty/themes` directory (wherever you installed the Ghostty "share" directory.
#
# To see a list of available themes, run `ghostty +list-themes`.
#
# A theme file is simply another Ghostty configuration file.
# They share the same syntax and same configuration options.
# A theme can set any valid configuration option so please do not use a theme file from an untrusted source.
# The built-in themes are audited to only set safe configuration options.
#
# Some options cannot be set within theme files.
# The reason these are not supported should be self-evident.
# A theme file cannot set `theme` or `config-file`.
# At the time of writing this, Ghostty will not show any warnings or errors if you set these options in a theme file but they will be silently ignored.
#
# Any additional colors specified via background, foreground, palette, etc.
# will override the colors specified in the theme.
#
# To specify a different theme for light and dark mode, use the following syntax: `light:theme-name,dark:theme-name`.
# For example: `light:rose-pine-dawn,dark:rose-pine`.
# Whitespace around all values are trimmed and order of light and dark does not matter.
# Both light and dark must be specified in this form.
# In this form, the theme used will be based on the current desktop environment theme.
#
# There are some known bugs with light/dark mode theming.
# These will be fixed in a future update:
#
#   - macOS: titlebar tabs style is not updated when switching themes.
#
theme = nord

# Swap the foreground and background colors of cells for selection.
# This option overrides the `selection-foreground` and `selection-background` options.
#
# If you select across cells with differing foregrounds and backgrounds,
# the selection color will vary across the selection.
selection-invert-fg-bg = false

# The minimum contrast ratio between the foreground and background colors.
# The contrast ratio is a value between 1 and 21.
# A value of 1 allows for no contrast (i.e. black on black).
# This value is the contrast ratio as defined by the [WCAG 2.0 specification](https://www.w3.org/TR/WCAG20/).
#
# If you want to avoid invisible text (same color as background), a value of 1.1 is a good value.
# If you want to avoid text that is difficult to read, a value of 3 or higher is a good value.
# The higher the value, the more likely that text will become black or white.
#
#
# This value does not apply to Emoji or images.
minimum-contrast = 1

# The opacity level (opposite of transparency) of the background. A value of
# 1 is fully opaque and a value of 0 is fully transparent. A value less than 0
# or greater than 1 will be clamped to the nearest valid value.
#
# On macOS, background opacity is disabled when the terminal enters native
# fullscreen. This is because the background becomes gray and it can cause
# widgets to show through which isn't generally desirable.
background-opacity = 1

# The opacity level (opposite of transparency) of an unfocused split.
# Unfocused splits by default are slightly faded out to make it easier to see which split is focused.
# To disable this feature, set this value to 1.
#
# A value of 1 is fully opaque and a value of 0 is fully transparent.
# Because "0" is not useful (it makes the window look very weird),
# the minimum value is 0.15.
# This value still looks weird but you can at least see what's going on.
# A value outside of the range 0.15 to 1 will be clamped to the nearest valid value.
unfocused-split-opacity = 0.7

# The color to dim the unfocused split.
# Unfocused splits are dimmed by rendering a semi-transparent rectangle over the split.
# This sets the color of that rectangle and can be used to carefully control the dimming effect.
#
# This will default to the background color.
unfocused-split-fill =

# If `true`, the bold text will use the bright color palette.
bold-is-bright = true

# The color of the cursor. If this is not set, a default will be chosen.
# cursor-color =

# Swap the foreground and background colors of the cell under the cursor.
# This option overrides the `cursor-color` and `cursor-text` options.
cursor-invert-fg-bg = false

# The opacity level (opposite of transparency) of the cursor.
# A value of 1 is fully opaque and a value of 0 is fully transparent.
# A value less than 0 or greater than 1 will be clamped to the nearest valid value.
# Note that a sufficiently small value such as 0.3 may be effectively invisible and may make it difficult to find the cursor.
cursor-opacity = 1

# The style of the cursor.
# This sets the default style.
# A running program can still request an explicit cursor style using escape sequences (such as `CSI q`).
# Shell configurations will often request specific cursor styles.
#
# Note that shell integration will automatically set the cursor to a bar at a prompt, regardless of this configuration.
# You can disable that behavior by specifying `shell-integration-features = no-cursor` or disabling shell integration entirely.
#
# Valid values are:
#
#   * `block`
#   * `bar`
#   * `underline`
#   * `block_hollow`
#
cursor-style = block

# Sets the default blinking state of the cursor.
# This is just the default state; running programs may override the cursor style using `DECSCUSR` (`CSI q`).
#
# If this is not set, the cursor blinks by default. Note that this is not the
# same as a "true" value, as noted below.
#
# If this is not set at all (`null`),
# then Ghostty will respect DEC Mode 12 (AT&T cursor blink) as an alternate approach to turning blinking on/off.
# If this is set to any value other than null,
# DEC mode 12 will be ignored but `DECSCUSR` will still be respected.
#
# Valid values are:
#
#   * `` (blank)
#   * `true`
#   * `false`
#
cursor-style-blink = false

# The color of the text under the cursor.
# If this is not set, a default will be chosen.
cursor-text =

# Enables the ability to move the cursor at prompts by using `alt+click` on Linux and `option+click` on macOS.
#
# This feature requires shell integration (specifically prompt marking via `OSC 133`) and only works in primary screen mode.
# Alternate screen applications like vim usually have their own version of this feature but this configuration doesn't control that.
#
# It should be noted that this feature works by translating your desired position into a series of synthetic arrow key movements,
# so some weird behavior around edge cases are to be expected.
# This is unfortunately how this feature is implemented across terminals because there isn't any other way to implement it.
cursor-click-to-move = true
